define(["require","machina","jquery","player/providers/spotify/spotify-client","core/ajax","debug"],function(i){"use strict";var t=i("machina"),n=(i("jquery"),i("player/providers/spotify/spotify-client")),s=i("core/ajax"),e=i("debug"),a="https://api.spotify.com/v1/tracks/",o=t.Fsm.extend({CONNECTION_ERROR_TIMEOUT:1e4,eventListeners:{transition:[function(i){e.info("Spotify proxy transition:",i.fromState,"->",i.toState)}]},initialState:"Uninitialized",states:{Uninitialized:{play:"Initialize",initialized:"Ready"},Initialize:{_onEnter:function(){this.track=this.currentActionArgs[1],this.publish("player.spotify.initialising"),this.client.connectSpotify()},play:function(){this.deferUntilTransition("Uninitialized"),this.transition("Uninitialized")},initialized:"Tuning",notinstalled:function(){var i=function(){this.handle("play",this.track)};this.client.openSignup(this.modalPath,this.track,i.bind(this)),this.transition("Uninitialized")}},Ready:{play:"Tuning"},Tuning:{_onEnter:function(){this.tuningTimer=setTimeout(function(){this.publish("player.spotify.error.communication-error")}.bind(this),this.CONNECTION_ERROR_TIMEOUT),this.duration=!1,this.track=this.currentActionArgs[1]||this.track,this.requestedTrackId=this.track.spotifyId,this.resumePausedAd(),this.client.play(this.track.spotifyId,!0)},_onExit:function(){clearTimeout(this.tuningTimer)},stop:function(){this.client.pause(),this.transition("Stopped")},pause:function(){this.client.pause()},playing:"Playing",stopped:"Stopped",unexpectedTrack:function(){clearTimeout(this.tuningTimer);var i=this.currentActionArgs[1],t=this;this.resolveId(this.requestedTrackId,function(n){i.trackId()===n&&(t.requestedTrackId=n,t.handle("playing",i.duration()),t.handle("positionChanged"))})},unavailable:function(){this.transition("Ready"),this.publish("player.provider.proxy.unavailable")}},Stopping:{_onEnter:function(){this.client.pause()},paused:"Stopped"},Playing:{_onEnter:function(){this.duration=this.currentActionArgs[1],this.publish("player.provider.proxy.playing")},play:"Tuning",pause:function(){this.client.pause()},stop:"Stopping",paused:"Paused",unexpectedTrack:"Paused",stopped:"Stopped",adPlaying:"AdPlaying",finished:"Finished",positionChanged:function(){this.startPublishingPlayerPosition()}},Paused:{_onEnter:function(){this.stopPublishingPlayerPosition(),this.publish("player.provider.proxy.paused")},play:"Tuning",resume:function(){this.client.play(this.requestedTrackId)},stop:"Stopped",playing:"Playing",stopped:"Stopped"},AdPlaying:{_onEnter:function(){this.stopPublishingPlayerPosition(),this.publish("player.ad.playing")},finished:"Finished"},Stopped:{_onEnter:function(){this.stopPublishingPlayerPosition(),this.transition("Ready"),this.publish("player.provider.proxy.stopped")}},Finished:{_onEnter:function(){this.stopPublishingPlayerPosition(),this.transition("Ready"),this.publish("player.provider.proxy.finished")}},Disconnected:{_onEnter:function(){this.stopPublishingPlayerPosition(),this.transition("Uninitialized"),this.publish("player.provider.proxy.stopped")}}}}),r=function(i){this._status=i};r.prototype={isUnavailable:function(){return void 0===this.position()&&this._status.status===!1},isAd:function(){return"ad"===this._status.track.track_type},isPlaying:function(){return!this.isPaused()&&!this.isFinished()},isPaused:function(){return this._status.status===!1},isFinished:function(){var i=this.position(),t=i>this.duration()-1;return this._status.status===!1?0===this.position()||t:t},trackId:function(){return this._status.track.track_resource.uri.split("spotify:track:")[1]},position:function(){return this._status.playing_position},duration:function(){return this._status.track.length}};var u=function(i,t){this.app=i;var s=this;this.client=new n(this.app,this.messageHandler.bind(this),function(){s.publish("player.provider.proxy.ready",s)}),this.stateManager=new(o.extend({publish:this.publish.bind(this),stopPublishingPlayerPosition:this.stopPublishingPlayerPosition.bind(this),startPublishingPlayerPosition:this.startPublishingPlayerPosition.bind(this),client:this.client,resumePausedAd:this.resumePausedAd.bind(this),resolveId:this.resolveId.bind(this),modalPath:t}))};return u.prototype={play:function(i){this.stateManager.handle("play",i)},pause:function(){this.stateManager.handle("pause")},resume:function(){this.stateManager.handle("resume")},stop:function(){this.stateManager.handle("stop")},getDuration:function(){return this.stateManager.duration},messageHandler:function(i){e.info("Spotify message:",i),"client-error"==i.key&&this.stateManager.handle("unavailable"),"player-status"===i.key&&this.playerStatusHandler(new r(i.data)),"client-connected"==i.key&&this.stateManager.handle("initialized"),"client-connection-failed"==i.key&&this.stateManager.handle("notinstalled"),"client-disconnected"==i.key&&this.stateManager.transition("Disconnected")},playerStatusHandler:function(i){return this.lastStatus=i,i.isAd()?void this.stateManager.handle("adPlaying"):(i.isUnavailable()&&this.stateManager.handle("unavailable"),this.isRequestedTrack(i)?i.isPlaying()?(this.stateManager.handle("playing",i.duration()),void this.stateManager.handle("positionChanged")):i.isFinished()?void this.stateManager.handle("finished"):void this.stateManager.handle("paused"):void this.stateManager.handle("unexpectedTrack",i))},resumePausedAd:function(){this.lastStatus&&this.lastStatus.isAd()&&this.lastStatus.isPaused()&&this.client.play(this.lastStatus.trackId())},isRequestedTrack:function(i){return void 0!==this.stateManager.requestedTrackId&&i.trackId()===this.stateManager.requestedTrackId},resolveId:function(i,t){s.get(a+i,null,{market:this.app.countryCode()},function(i,n){t(n&&n.id)})},publish:function(i,t){var n={provider:"spotify"};void 0!==t&&(n.message=t),this.app.eventMediator.publish(i,n)},startPublishingPlayerPosition:function(){this.stopPublishingPlayerPosition(),this.publishPlayerPosition(this.lastStatus.position())},publishPlayerPosition:function(i){var t=this;t.publish("player.provider.proxy.positionChanged",i),t.lastPublishedPositionTimestamp=Date.now(),t._playerPositionTimeout=setTimeout(function(){var n=(Date.now()-t.lastPublishedPositionTimestamp)/1e3;t.publishPlayerPosition(i+n)},1e3)},stopPublishingPlayerPosition:function(){clearTimeout(this._playerPositionTimeout)}},u});